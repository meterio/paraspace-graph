specVersion: 0.0.4
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: PoolCore
    network: goerli
    source:
      address: "0xF6d07265E9507233c5d0e524D146dF2794cE30c5"
      abi: Contract
      startBlock: 8704600
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - SummaryData
        - Account
      abis:
        - name: Contract
          file: ./abis/PoolCore.json
        - name: PoolParameters
          file: ./abis/PoolParameters.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC721
          file: ./abis/ERC721.json
        - name: PriceOracle
          file: ./abis/ParaSpaceOracle.json
        - name: EACAggregator
          file: ./abis/EACAggregator.json
        - name: UiPoolDataProvider
          file: ./abis/UiPoolDataProvider.json
      eventHandlers:
        - event: Borrow(indexed address,address,indexed address,uint256,uint256,indexed uint16)
          handler: handleBorrow
        - event: LiquidateERC20(indexed address,indexed address,indexed address,uint256,uint256,address,bool)
          handler: handleLiquidateERC20
        - event: LiquidateERC721(indexed address,indexed address,indexed address,uint256,uint256,address,bool)
          handler: handleLiquidateERC721
        - event: Repay(indexed address,indexed address,indexed address,uint256,bool)
          handler: handleRepay
        - event: Supply(indexed address,address,indexed address,uint256,indexed uint16)
          handler: handleSupply
        - event: SupplyERC721(indexed address,address,indexed address,(uint256,bool)[],indexed uint16,bool)
          handler: handleSupplyERC721
        - event: Withdraw(indexed address,indexed address,indexed address,uint256)
          handler: handleWithdraw
        - event: WithdrawERC721(indexed address,indexed address,indexed address,uint256[])
          handler: handleWithdrawERC721
      file: ./src/PoolCore.ts
  - kind: ethereum
    name: PoolMarketplace
    network: goerli
    source:
      address: "0xF6d07265E9507233c5d0e524D146dF2794cE30c5"
      abi: Contract
      startBlock: 8704648
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - PoolMarketplaceAcceptBidWithCreditEntity
        - PoolMarketplaceBuyWithCreditEntity
      abis:
        - name: Contract
          file: ./abis/PoolMarketplace.json
      eventHandlers:
        - event: AcceptBidWithCredit(indexed bytes32,(address,address,bytes,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[]),(address,uint256,bytes,uint8,bytes32,bytes32))
          handler: handleAcceptBidWithCredit
        - event: BuyWithCredit(indexed bytes32,(address,address,bytes,(uint8,address,uint256,uint256,uint256)[],(uint8,address,uint256,uint256,uint256,address)[]),(address,uint256,bytes,uint8,bytes32,bytes32))
          handler: handleBuyWithCredit
      file: ./src/PoolMarketplace.ts
  - kind: ethereum
    name: TimeLock
    network: goerli
    source:
      address: "0x1E78BD140a288fe61933608127C1d43e5424c018"
      abi: Contract
      startBlock: 8704638
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - SummaryData
      abis:
        - name: Contract
          file: ./abis/TimeLock.json
      eventHandlers:
        - event: AgreementCreated(uint256,uint8,uint8,indexed address,uint256[],indexed address,uint48)
          handler: handleAgreementCreated
        - event: AgreementClaimed(uint256,uint8,uint8,indexed address,uint256[],indexed address)
          handler: handleAgreementClaimed
      file: ./src/PoolCore.ts